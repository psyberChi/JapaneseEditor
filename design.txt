= Japanese Vocabulary Editor =

== TODO ==

* Handle modified file properly
** Warning when opening new file when current modified.
** Warn when creating new file when current modified.
** Warn when closing application when there are modifications.
* Add actions to menu items.
** Exit, Add/Delete Category, Add/Delete/Move Vocabulary.
** Move Vocabulary: show a sub-menu?
** Recent files?
* VocabModel
** Make properties a array of properties so more can be added dynamically.
* Preferences
** Create class that extends Properties?
** Adjust font sizes for each field, and the list text.
*** Allow font size preference of vocab list based on display mode?
** Where will the preference file be saved to. ~/vocabeditor.prefs
* Log application to file accessible by user as need be.

=== MVC Tasks ===

* Update lesson list when lesson value changed.
** While in lesson view, added vocabulary could get default "unknown/unsorted" category
** Get a list of lessons when reading in file and caching them. Then can update as items are added and edited.
* Break listeners out into separate classes?

= Hierarchy for programs =

Quiz
	-> KanaQuiz
	-> VocabQuiz

== Project directory layout ==

Japanese Projects/
	Quiz (project)
		QuizModel.java
		Quiz(Interface).java
		Question.java
	Utils/
		CustomLogger.java
	Japanese/
		JapaneseUtils (project, no main)
			VocabModel.java
		JapaneseVocabEditor (project)
		KanaQuiz (project)
		VocabQuiz (project)

== Keyboard Shortcuts ==

Open: Ctrl + O
Save: Ctrl + S
Save as: Ctrl + Shift + S
Close:
Exit:
Add Category: Ctrl + Shift + C
Remove Category:
Add Vocabulary: Ctrl + Shift + V
Remove Vocabulary: Ctrl + Shift + R
Move Vocabulary: Ctrl + M

== Data Format ==

Current
{
	"category": [
		{"en":"", "ro":"", "kn":"", "kj":"", "ln":0}
	]
}

New?
{
	"categories": {
		"cat-0": "Uncategorized"
	},
	"vocabulary": [
		{
			"en": "_",
			"ro": "keiyoushi",
			"kn": "けいようし",
			"kj": "形容詞",
			"ln": 0,
			"cat": "cat-0" // category id
		}
	]
}

= GUI =

{
	"top": {
		"splitpane": {
			"direction": "horizontal",
			"panes": [
				"categoryList": {
					"list": JList,
					"buttons": [
						"add": JButton,
						"remove": JButton
					]
				},
				"vocabList": {
					"list": JList,
					"buttons": [
						"add": JButton,
						"remove": JButton,
						"move": JButton
					]
				}
			]
		}
	},
	"editorRegion": {
		"layout": {
			"type": "box",
			"direction": "page"
		},
		"english": [
			"label": JLabel,
			"value": JTextField
		],
		"romaji": [
			"label": JLabel,
			"value": JTextField
		],
		"kana": [
			"label": JLabel,
			"value": JTextField
		],
		"kanji": [
			"label": JLabel,
			"value": JTextField
		],
		"lesson": [
			"label": JLabel,
			"value": JSpinner
		]
	},
	"statusBar": {
		"text": JLabel
	}
}

== Preferences ==

Font Sizes {
	List {
		SortMode
		English
		Romaji
		Kana
		Kanji
	}
	Editor {
		English
		Romaji
		Kana
		Kanji
	}
	sizes [8-32]
}
Font family {}?
Recently Opened [0..Max Recent] (absolute path)
Max Recent [0-20]
Window {
	size
	location (check that it is on-screen)
}

= Thinking =

Command line interaction

Start up takes a file name or creates new file.
===Main Menu============
1. List by Category (14) -> Display categories to choose from
2. List by Lesson (10) -> Display lessons available
3. Add new category
4. Add new vocabulary
5. Save File
6. Exit

Choose> _
=======================
